version: "3.7"

services:
    proxy:
        image: nginx:alpine
        container_name: proxy
        ports:
            - "80:80"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
        restart: "unless-stopped"
        networks:
            - backend
    server1:
        build:
            context: ./
            target: development-build-stage
            dockerfile: Dockerfile
        container_name: server
        ports:
            - "8501:8500"
        volumes:
            - ./:/app
            - /app/node_modules
        restart: "unless-stopped"
        networks:
            - backend
        links:
            - mongo
        depends_on:
            - mongo
        environment:
            - APP_NAME=app1
    server2:
        build:
            context: ./
            target: development-build-stage
            dockerfile: Dockerfile
        container_name: server2
        ports:
            - "8502:8500"
        volumes:
            - ./:/app
            - /app/node_modules
        restart: "unless-stopped"
        networks:
            - backend
        links:
            - mongo
        depends_on:
            - mongo
        environment:
            - APP_NAME=app2

    server3:
        build:
            context: ./
            target: development-build-stage
            dockerfile: Dockerfile
        container_name: server3
        ports:
            - "8503:8500"
        volumes:
            - ./:/app
            - /app/node_modules
        restart: "unless-stopped"
        networks:
            - backend
        links:
            - mongo
        depends_on:
            - mongo
        environment:
            - APP_NAME=app3
            -
    mongo:
        image: mvertes/alpine-mongo
        container_name: mongo
        ports:
            - "27017:27017"
        networks:
            - backend

networks:
    backend:
        driver: bridge

volumes:
    data:
        driver: local
